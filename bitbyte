#!/bin/zsh

# bitbyte
AlarmVersion=0.2
# Author: David Harman
# Date: 4th December 2023
# Display a particular file size (e.g. 1MB) in every other combination (bytes/KB/MB/GB/TB)

retval=""
retval2=""

#BitBite
#Calculator to show the common values bytes/KB/MB/GB/TB of a value (e.g. 1 MB or 800 KB, or 1MB or 800KB)
#You can specify one parameter value and size (e.g. 1MB) or two paramters value and data size (e.g. 8 MB)
k_ibi=1024
k_ilo=1000

call_clean() {
  retval=0
  retval2=0
  call_convert $1 $2
#  echo 'The Sum is' $retval
#  let retval2=$retval
  let retval2=$(bc<<<"scale=2;"$retval)
}

call_convert() {
# Function to convert data sizes
# 2 inputs, 1 is value, 2 is data size
retval=0
case $2 in
  "B-b")  retval=$1*8;;
  "B-KiB") retval=$1/$k_ibi;;
  "B-KB") retval=$1/$k_ilo;;
  "B-Kb") retval=$1/$k_ilo*8;;
  "B-MiB") retval=$1/$k_ibi/$k_ibi;;
  "B-MB") retval=$1/$k_ilo/$k_ilo;;
  "B-Mb") retval=$1/$k_ilo/$k_ilo*8;;
  "B-GiB") retval=$1/$k_ibi/$k_ibi/$k_ibi;;
  "B-GB") retval=$1/$k_ilo/$k_ilo/$k_ilo;;
  "B-Gb") retval=$1/$k_ilo/$k_ilo/$k_ilo*8;;
  "B-Tb") retval=$1/$k_ilo/$k_ilo/$k_ilo/$k_ilo*8;;
  "B-TB") retval=$1/$k_ilo/$k_ilo/$k_ilo/$k_ilo;;
  "b-B") retval=$1/8;;
  "KiB-B") retval=$1*$k_ibi;;
  "KB-B") retval=$1*$k_ilo;;
  "Kb-B") retval=$1*$k_ilo/8;;
  "MiB-B") retval=$1*$k_ibi*$k_ibi;;
  "MB-B") retval=$1*$k_ilo*$k_ilo;;
  "Mb-B") retval=$1*$k_ilo*$k_ilo/8;;
  "GiB-B") retval=$1*$k_ibi*$k_ibi*$k_ibi;;
  "GB-B") retval=$1*$k_ilo*$k_ilo*$k_ilo;;
  "Gb-B") retval=$1*$k_ilo*$k_ilo*$k_ilo/8;;
  "Tb-B") retval=$1*$k_ilo*$k_ilo*$k_ilo*$k_ilo/8;;
  "TB-B") retval=$1*$k_ilo*$k_ilo*$k_ilo*$k_ilo;;
esac
}

# Init
# Check if 2 parameters exist


if [[ "x$1" = "x" ]]
then
     # No parameters provided
     echo "Command usage: bitbyte <value> <size>"
     echo "You need to specify a number a space and a size, e.g. 1MB, 8TB, 1 MB or 8 TB"
     echo "You can use, b,B,Kb,KB,KiB,Mb,MB,MiB,Gb,GB,GiB,Tb,TB (this is case sensitive)"
     exit
elif [[ "x$2" = "x" ]]
     then
     # Only one parameter provided, need to determine if there is two parameters (e.g. 1MB is 1 MB)
     param=$1
     1="${param//[!0-9]/}" 
     2="${param//[!a-z!A-Z]/}"
     if [[ "x$2" = "x" ]]
     then
     # No second parameter provided
     echo "Command usage: bitbyte <value> <size>"
     echo "You did not specify a size, e.g. 1MB, 8TB, 1 MB or 8 TB"
     echo "You can use, b,B,Kb,KB,KiB,Mb,MB,MiB,Gb,GB,GiB,Tb,TB (this is case sensitive)"
     exit
     fi
fi

nm=$1
ds=$2
pn=""

case $ds in
  b) l_abel='Bits';
     call_convert $nm 'b-B';;
  B) l_abel='Bytes';
     let b_ytes=$nm;;
  Kib) l_abel='KibiBits';
      call_convert $nm 'Kib-B';;
  Kb) l_abel='KiloBits';
      call_convert $nm 'Kb-B';;
  KiB) l_abel='KibiBytes';
      call_convert $nm 'KiB-B';;
  KB) l_abel='KiloBytes';
      call_convert $nm 'KB-B';;
  Mb) l_abel='MegaBits';
      call_convert $nm 'Mb-B';;
  MiB) l_abel='Mebibytes';
      call_convert $nm 'MiB-B';;
  MB) l_abel='MegaBytes';
      call_convert $nm 'MB-B';;
  Gb) l_abel='GigaBits';
      call_convert $nm 'Gb-B';;
  GiB) l_abel='GibiBytes';
      call_convert $nm 'GiB-B';;
  GB) l_abel='GigaBytes';
      call_convert $nm 'GB-B';;
  Tb) l_abel='TeraBits';
      call_convert $nm 'Tb-B';;
  TB) l_abel='TeraBytes';
      call_convert $nm 'TB-B';;
  *) echo "Incorrect values:Supported values are b,B,Kb,KB,KiB,Mb,MB,MiB,Gb,GB,GiB,Tb,TB (this is case sensitive)" ;
     exit;;
esac

if [ $ds != B ]; then
#    echo Sum is  $retval
    let b_ytes=$(bc<<<$retval)
#    echo Bytes are $b_ytes
fi

call_clean $b_ytes "B-b" 
b_its=$retval2

call_clean $b_ytes 'B-Kb'
kilob_its=$retval2
call_clean $b_ytes 'B-KB'
kilob_ytes=$retval2
call_clean $b_ytes 'B-KiB'
kibib_ytes=$retval2

call_clean $b_ytes 'B-Mb'
megab_its=$retval2
call_clean $b_ytes 'B-MB'
megab_ytes=$retval2
call_clean $b_ytes 'B-MiB'
mibib_ytes=$retval2

call_clean $b_ytes 'B-Gb'
gigab_its=$retval2
call_clean $b_ytes 'B-GB'
gigab_ytes=$retval2
call_clean $b_ytes 'B-GiB'
gibib_ytes=$retval2

call_clean $b_ytes 'B-Tb'
terab_its=$retval2
call_clean $b_ytes 'B-TB'
terab_ytes=$retval2

echo  "Input  value $nm $l_abel"
echo  "" 
echo "Bits:     "$b_its
echo "Bytes:    "$b_ytes
echo "KiloBits: "$kilob_its
echo "KiloBytes:"$kilob_ytes
echo "KibiBytes:"$kibib_ytes
echo "MegaBits: "$megab_its
echo "MegaBytes:"$megab_ytes
echo "MebiBytes:"$mibib_ytes
echo "GigaBits: "$gigab_its
echo "GigaBytes:"$gigab_ytes
echo "GibiBytes:"$gibib_ytes
echo "TeraBits: "$terab_its
echo "TeraBytes:"$terab_ytes
